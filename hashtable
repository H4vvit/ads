#define MAX 10
#include <iostream>
using namespace std;
class HashTable{
    private:
            int *ht;
    public:
          HashTable()
          {
              ht=(int *)calloc(MAX,sizeof(int));
          }
          int hashkey(int val)
          {
              int i;
              i=val%MAX;
              return i;
              
          }
          void insert(int val)
          {
              int index;
              index=hashkey(val);
              ht[index]=val;
              
          }
          int search(int val)
          {
            int i;
            i=hashkey(val);
            if(ht[i]==val)
                  return i;
            else
                  return -1;
          }
          void remove(int val)
          {
              int i;
              i=search(val);
              if(i==-1)
                 cout<<"\n no such element";
              else
              {
                  ht[i]=0;
                  cout<<"\n element removed.....";
              }
          }
};

int main()
{
    HashTable h;
    int a[5]={21,33,65,90,22};
    for(int i=0;i<5;i++)
          h.insert(a[i]);
    h.remove(65);
    h.remove(40);
    int p=h.search(21);
    if(p==-1)
         cout<<"\n element not found";
    else
          cout<<"\n element found at"<<" "<<p<<" "<<"position";
          

    return 0;
}
